<?xml version="1.0" encoding="ASCII"?>
<llvm:LLVM xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:llvm="http://www.upb.de/llvm_parser/llvm">
  <elements xsi:type="llvm:TopLevelEntity" target="e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S128"/>
  <elements xsi:type="llvm:TopLevelEntity" target="i386-pc-linux-gnu"/>
  <elements xsi:type="llvm:TypeDefinition">
    <address name="%class.Stack"/>
    <struct>
      <types xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
    </struct>
  </elements>
  <elements xsi:type="llvm:TypeDefinition">
    <address name="%class.Node"/>
    <struct>
      <types xsi:type="llvm:Predefined" type="i32"/>
      <types xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
    </struct>
  </elements>
  <elements xsi:type="llvm:AliasDefinition">
    <address name="@_ZN5StackC1Ev"/>
    <aliastype xsi:type="llvm:Predefined" type="void"/>
    <aliasvalue xsi:type="llvm:AddressUse" pointer="**" address="//@elements.2/@address"/>
    <aliasee xsi:type="llvm:AddressUse" address="//@elements.5/@address"/>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition" align="2">
    <returnType xsi:type="llvm:Predefined" type="void"/>
    <address name="@_ZN5StackC2Ev"/>
    <parameter>
      <params>
        <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
        <value name="%this"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%head"/>
          <aggerate>
            <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.5/@parameter/@params.0/@value"/>
          </aggerate>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indizies xsi:type="llvm:Constant" value="0"/>
          <indizies xsi:type="llvm:Constant" value="0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
            <value xsi:type="llvm:PrimitiveValue" value="null"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:AddressUse" pointer="**" address="//@elements.3/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.5/@body/@blocks.0/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value>
            <type xsi:type="llvm:Predefined" type="void"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition" align="2">
    <returnType xsi:type="llvm:Predefined" type="void"/>
    <address name="@_ZN5Stack4pushEi"/>
    <parameter>
      <params>
        <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
        <value name="%this"/>
      </params>
      <params>
        <type xsi:type="llvm:Predefined" type="i32"/>
        <value name="%v"/>
      </params>
    </parameter>
    <body>
      <blocks label="invoke.cont">
        <instructions xsi:type="llvm:Call">
          <result name="%call"/>
          <function>
            <type xsi:type="llvm:Predefined" type="i8*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@address"/>
          </function>
          <pList>
            <params>
              <type xsi:type="llvm:Predefined" type="i32"/>
              <value xsi:type="llvm:Constant" value="8"/>
            </params>
          </pList>
        </instructions>
        <instructions xsi:type="llvm:Cast" operation="bitcast">
          <result name="%val"/>
          <from xsi:type="llvm:Predefined" type="i8*"/>
          <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          <to xsi:type="llvm:Predefined" type="i32*"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@parameter/@params.1/@value"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%head"/>
          <aggerate>
            <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@parameter/@params.0/@value"/>
          </aggerate>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indizies xsi:type="llvm:Constant" value="0"/>
          <indizies xsi:type="llvm:Constant" value="0"/>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%next"/>
          <aggerate>
            <type xsi:type="llvm:Predefined" type="i8*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          </aggerate>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indizies xsi:type="llvm:Constant" value="4"/>
        </instructions>
        <instructions xsi:type="llvm:Cast" operation="bitcast">
          <result name="%0"/>
          <from xsi:type="llvm:Predefined" type="i8*"/>
          <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.4/@result"/>
          <to xsi:type="llvm:AddressUse" pointer="**" address="//@elements.3/@address"/>
        </instructions>
        <instructions xsi:type="llvm:Cast" operation="bitcast">
          <result name="%1"/>
          <from xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
          <value xsi:type="llvm:AddressUse" address="//@elements.5/@parameter/@params.0/@value"/>
          <to xsi:type="llvm:Predefined" type="i32*"/>
        </instructions>
        <instructions xsi:type="llvm:Cast" operation="ptrtoint">
          <result name="%2"/>
          <from xsi:type="llvm:Predefined" type="i8*"/>
          <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          <to xsi:type="llvm:Predefined" type="i32"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%3"/>
          <address>
            <type xsi:type="llvm:AddressUse" pointer="**" address="//@elements.3/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.3/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:AddressUse" pointer="**" address="//@elements.3/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.5/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Cast" operation="ptrtoint">
          <result name="%4"/>
          <from xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
          <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.0/@result"/>
          <to xsi:type="llvm:Predefined" type="i32"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.6/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.2/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.7/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="eq">
          <result name="%6"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.3/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.end" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.4/@result"/>
        </instructions>
      </blocks>
      <blocks label="do.end">
        <instructions xsi:type="llvm:Return">
          <value>
            <type xsi:type="llvm:Predefined" type="void"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i8*"/>
    <address name="@_Znwj"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" type="i32"/>
      </params>
    </parameter>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition" align="2">
    <returnType xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
    <address name="@_ZN5Stack3popEv"/>
    <parameter>
      <params>
        <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
        <value name="%this"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%head"/>
          <aggerate>
            <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@parameter/@params.0/@value"/>
          </aggerate>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indizies xsi:type="llvm:Constant" value="0"/>
          <indizies xsi:type="llvm:Constant" value="0"/>
        </instructions>
        <instructions xsi:type="llvm:Cast" operation="bitcast">
          <result name="%0"/>
          <from xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
          <value xsi:type="llvm:AddressUse" address="//@elements.5/@parameter/@params.0/@value"/>
          <to xsi:type="llvm:Predefined" type="i32*"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:AddressUse" pointer="**" address="//@elements.3/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="eq">
          <result name="%cmp"/>
          <opType xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.6/@result"/>
          <operand2 xsi:type="llvm:PrimitiveValue" value="null"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.end">
          <condition xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.1/@instructions.1/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end">
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%next"/>
          <aggerate>
            <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.1/@instructions.0/@result"/>
          </aggerate>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indizies xsi:type="llvm:Constant" value="0"/>
          <indizies xsi:type="llvm:Constant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:AddressUse" pointer="**" address="//@elements.3/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.2/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Cast" operation="ptrtoint">
          <result name="%3"/>
          <from xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
          <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.6/@result"/>
          <to xsi:type="llvm:Predefined" type="i32"/>
        </instructions>
        <instructions xsi:type="llvm:Cast" operation="ptrtoint">
          <result name="%4"/>
          <from xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
          <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.7/@result"/>
          <to xsi:type="llvm:Predefined" type="i32"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.5/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.2/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="eq">
          <result name="%6"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.3/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.1/@instructions.4/@result"/>
        </instructions>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
          <cases label="%do.body">
            <value xsi:type="llvm:PrimitiveValue" value="null"/>
          </cases>
          <cases label="%if.end">
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.6/@result"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value>
            <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.3/@address"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.3/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!0">
    <values meta="!&quot;any pointer&quot;"/>
    <values meta="!1"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!1">
    <values meta="!&quot;omnipotent char&quot;"/>
    <values meta="!2"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!2">
    <values meta="!&quot;Simple C/C++ TBAA&quot;"/>
    <values>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </values>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!3">
    <values meta="!&quot;int&quot;"/>
    <values meta="!1"/>
  </elements>
</llvm:LLVM>
