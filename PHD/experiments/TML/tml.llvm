<?xml version="1.0" encoding="ASCII"?>
<llvm:LLVM xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:llvm="http://www.upb.de/llvm_parser/llvm">
  <elements xsi:type="llvm:TopLevelEntity" target="e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S128"/>
  <elements xsi:type="llvm:TopLevelEntity" target="i386-pc-linux-gnu"/>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@glb"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@x"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@y"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@lx1"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" type="i32"/>
      <value xsi:type="llvm:IntegerConstant"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@ly1"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" type="i32"/>
      <value xsi:type="llvm:IntegerConstant"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@lx2"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" type="i32"/>
      <value xsi:type="llvm:IntegerConstant"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@ly2"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" type="i32"/>
      <value xsi:type="llvm:IntegerConstant"/>
    </value>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@proc11"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.1/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.2/@instructions.0/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%3"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.2/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end4" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.2/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end4">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.3/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.3/@instructions.2/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.3/@instructions.4/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.3/@instructions.5/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.2/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end6" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.3/@instructions.6/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end6">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.3/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and7"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.2/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool8"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.4/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.then9">
          <condition xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.4/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then9">
        <instructions xsi:type="llvm:Fence" ordering="seq_cst"/>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%9"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%10"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.5/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%inc10"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.5/@instructions.2/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.5/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.5/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%if.then">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end4">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end6">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
          <cases label="%if.then9">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.6/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@proc21"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.1/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.2/@instructions.0/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%3"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.2/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end4" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.2/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end4">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.3/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.3/@instructions.2/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.3/@instructions.4/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.3/@instructions.5/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.2/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end6" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.3/@instructions.6/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end6">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.3/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and7"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.2/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool8"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.4/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.then9">
          <condition xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.4/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then9">
        <instructions xsi:type="llvm:Fence" ordering="seq_cst"/>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%9"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%10"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.5/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%inc10"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.5/@instructions.2/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.5/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.5/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%if.then">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end4">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end6">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
          <cases label="%if.then9">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.6/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@proc12"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.1/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.2/@instructions.0/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%3"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.2/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end4" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.2/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end4">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.3/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.3/@instructions.2/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.3/@instructions.4/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.3/@instructions.5/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.2/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end6" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.3/@instructions.6/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end6">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.3/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.5/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%9"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%10"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.4/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%11"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%12"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.4/@instructions.3/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp7"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.4/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.2/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end9" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.4/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end9">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.4/@instructions.2/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and10"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.2/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool11"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.5/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.then12">
          <condition xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.5/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then12">
        <instructions xsi:type="llvm:Fence" ordering="seq_cst"/>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%13"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%14"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.6/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%inc13"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.6/@instructions.2/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.6/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.6/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%if.then">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end4">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end6">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end9">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
          <cases label="%if.then12">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@body/@blocks.7/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@proc22"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.1/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.2/@instructions.0/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%3"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.2/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end4" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.2/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end4">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.3/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.3/@instructions.2/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.3/@instructions.4/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.3/@instructions.5/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.2/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end6" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.3/@instructions.6/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end6">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.3/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%9"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%10"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.4/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%11"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%12"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.4/@instructions.3/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp7"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.4/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.2/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end9" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.4/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end9">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.4/@instructions.2/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and10"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.2/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool11"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.5/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.then12">
          <condition xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.5/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then12">
        <instructions xsi:type="llvm:Fence" ordering="seq_cst"/>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%13"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%14"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.6/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%inc13"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.6/@instructions.2/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.6/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.6/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%if.then">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end4">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end6">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end9">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
          <cases label="%if.then12">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@body/@blocks.7/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@proc13"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.1/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.2/@instructions.0/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%3"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.2/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end4" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.2/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end4">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.3/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and5"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.2/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool6"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.3/@instructions.2/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.then7">
          <condition xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.3/@instructions.3/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then7">
        <instructions xsi:type="llvm:Fence" ordering="seq_cst"/>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.4/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%inc8"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.4/@instructions.2/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.4/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.4/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%if.then">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end4">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
          <cases label="%if.then7">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.13/@body/@blocks.5/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@proc23"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.1/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.2/@instructions.0/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%3"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.2/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end4" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.2/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end4">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.3/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and5"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.2/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool6"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.3/@instructions.2/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.then7">
          <condition xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.3/@instructions.3/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then7">
        <instructions xsi:type="llvm:Fence" ordering="seq_cst"/>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.4/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%inc8"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.4/@instructions.2/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.4/@instructions.3/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.4/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%if.then">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end4">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
          <cases label="%if.then7">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.14/@body/@blocks.5/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@proc33"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.1/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.end" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="do.end">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%3"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.2/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.2/@instructions.2/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.2/@instructions.3/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.2/@instructions.1/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.5/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.3/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.3/@instructions.3/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp1"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.3/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end3" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.3/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end3">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.3/@instructions.2/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%do.end">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end3">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.15/@body/@blocks.5/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@proc43"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.body"/>
      </blocks>
      <blocks label="do.body">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.1/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.1/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%do.end" elseDestination="%do.body">
          <condition xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
      </blocks>
      <blocks label="do.end">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%3"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.2/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.2/@instructions.2/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.2/@instructions.3/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.2/@instructions.1/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.3/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.3/@instructions.3/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp1"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.3/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end3" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.3/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end3">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.3/@instructions.2/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%do.end">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end">
            <value xsi:type="llvm:IntegerConstant" value="-1"/>
          </cases>
          <cases label="%if.end3">
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.16/@body/@blocks.5/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@main"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" type="i32"/>
        <value name="%argc"/>
      </params>
      <params>
        <type xsi:type="llvm:Predefined" pointer="**" type="i8"/>
        <value name="%argv"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!0">
    <values meta="!&quot;any pointer&quot;"/>
    <values meta="!1"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!1">
    <values meta="!&quot;omnipotent char&quot;"/>
    <values meta="!2"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!2">
    <values meta="!&quot;Simple C/C++ TBAA&quot;"/>
    <values>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </values>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!3">
    <values meta="!&quot;int&quot;"/>
    <values meta="!1"/>
  </elements>
</llvm:LLVM>
