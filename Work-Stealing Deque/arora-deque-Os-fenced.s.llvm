<?xml version="1.0" encoding="UTF-8"?>
<llvm:LLVM xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:llvm="http://www.upb.de/llvm_parser/llvm">
  <elements xsi:type="llvm:TopLevelEntity" target="e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S128"/>
  <elements xsi:type="llvm:TopLevelEntity" target="i386-pc-linux-gnu"/>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@bot"/>
    <value>
      <type xsi:type="llvm:Predefined" type="i32*"/>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@deq"/>
    <value>
      <type xsi:type="llvm:Predefined" type="i32*"/>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@age"/>
    <value>
      <type xsi:type="llvm:Predefined" type="i32*"/>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@top"/>
    <value>
      <type xsi:type="llvm:Predefined" type="i32*"/>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </value>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="void"/>
    <address name="@push"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" type="i32"/>
        <value name="%elem"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx"/>
          <aggerate>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.2/@result"/>
          </aggerate>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indizies xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@parameter/@params.0/@value"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.3/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperation" operation="add">
          <result name="%inc"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
          <value2 xsi:type="llvm:Constant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.5/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value>
            <type xsi:type="llvm:Predefined" type="void"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@dequeue"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%3"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.2/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="ashr">
          <result name="%shr"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
          <value2 xsi:type="llvm:Constant" value="16"/>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="ugt">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.3/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.4/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end" elseDestination="%return">
          <condition xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx"/>
          <aggerate>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.0/@result"/>
          </aggerate>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indizies xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.4/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.3/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperation" operation="add">
          <result name="%add5"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
          <value2 xsi:type="llvm:Constant" value="65536"/>
        </instructions>
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.3/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="eq">
          <result name="%7"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Select">
          <result name="%."/>
          <condition>
            <type xsi:type="llvm:Predefined" type="i1"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.5/@result"/>
          </condition>
          <trueValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.2/@result"/>
          </trueValue>
          <elseValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:Constant" value="-2"/>
          </elseValue>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%entry">
            <value xsi:type="llvm:Constant" value="-1"/>
          </cases>
          <cases label="%if.end">
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.6/@result"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.2/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@pop"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="eq">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
          <operand2 xsi:type="llvm:Constant" value="0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.end">
          <condition xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end">
        <instructions xsi:type="llvm:ArithmeticOperation" operation="add">
          <result name="%dec"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.1/@result"/>
          <value2 xsi:type="llvm:Constant" value="-1"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx"/>
          <aggerate>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.2/@result"/>
          </aggerate>
          <indTypes xsi:type="llvm:Predefined" type="i32"/>
          <indizies xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.1/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%3"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.3/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Fence" ordering="seq_cst"/>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="ashr">
          <result name="%shr"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.2/@result"/>
          <value2 xsi:type="llvm:Constant" value="16"/>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="ugt">
          <result name="%cmp1"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.1/@instructions.0/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.4/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.end3">
          <condition xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.1/@instructions.9/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.end3">
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:Constant" value="0"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.6/@body/@blocks.0/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%and"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.2/@result"/>
          <value2 xsi:type="llvm:Constant" value="65535"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperation" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.2/@instructions.1/@result"/>
          <value2 xsi:type="llvm:Constant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="eq">
          <result name="%cmp5"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.1/@instructions.0/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.4/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then6" elseDestination="%if.end9">
          <condition xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.2/@instructions.3/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then6">
        <instructions xsi:type="llvm:CmpXchg" ordering="seq_cst">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.0/@result"/>
          </address>
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.2/@result"/>
          </value>
          <newValue>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.2/@instructions.2/@result"/>
          </newValue>
        </instructions>
        <instructions xsi:type="llvm:Compare" cond="eq">
          <result name="%7"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.2/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return" elseDestination="%if.then6.if.end9_crit_edge">
          <condition xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then6.if.end9_crit_edge">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%.pre"/>
          <address>
            <type xsi:type="llvm:Predefined" type="i32**"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end9"/>
      </blocks>
      <blocks label="if.end9">
        <instructions xsi:type="llvm:Phi">
          <result name="%8"/>
          <type xsi:type="llvm:Predefined" type="i32*"/>
          <cases label="%if.then6.if.end9_crit_edge">
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.4/@instructions.0/@result"/>
          </cases>
          <cases label="%if.end3">
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.1/@instructions.0/@result"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.2/@instructions.2/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" type="i32*"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.5/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%return"/>
      </blocks>
      <blocks label="return">
        <instructions xsi:type="llvm:Phi">
          <result name="%retval.0"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%if.end9">
            <value xsi:type="llvm:Constant" value="-1"/>
          </cases>
          <cases label="%entry">
            <value xsi:type="llvm:Constant" value="-1"/>
          </cases>
          <cases label="%if.end">
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.3/@result"/>
          </cases>
          <cases label="%if.then6">
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.0/@instructions.3/@result"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.7/@body/@blocks.2/@instructions.0/@result"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@main"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" type="i32"/>
        <value name="%argc"/>
      </params>
      <params>
        <type xsi:type="llvm:Predefined" type="i8**"/>
        <value name="%argv"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Return">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:Constant" value="0"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!0">
    <values meta="!&quot;any pointer&quot;"/>
    <values meta="!1"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!1">
    <values meta="!&quot;omnipotent char&quot;"/>
    <values meta="!2"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!2">
    <values meta="!&quot;Simple C/C++ TBAA&quot;"/>
    <values>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </values>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!3">
    <values meta="!&quot;int&quot;"/>
    <values meta="!1"/>
  </elements>
</llvm:LLVM>
