<?xml version="1.0" encoding="ASCII"?>
<llvm:LLVM xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:llvm="http://www.upb.de/llvm_parser/llvm">
  <elements xsi:type="llvm:TopLevelEntity" target="e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S128"/>
  <elements xsi:type="llvm:TopLevelEntity" target="i386-pc-linux-gnu"/>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@choosing"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Array" length="2">
        <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
      </type>
      <value xsi:type="llvm:PrimitiveValue" value="zeroinitializer"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@number"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Array" length="2">
        <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
      </type>
      <value xsi:type="llvm:PrimitiveValue" value="zeroinitializer"/>
    </value>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="void"/>
    <address name="@proci"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" type="i32"/>
        <value name="%i"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx"/>
          <aggregate>
            <type xsi:type="llvm:Array" length="2" pointer="*">
              <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
            </type>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </aggregate>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </indices>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@parameter/@params.0/@value"/>
          </indices>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i8"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="1">
          <value>
            <type xsi:type="llvm:Predefined" type="i8"/>
            <value xsi:type="llvm:IntegerConstant" value="1"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:NestedGetElementPtr">
              <aggregate>
                <type xsi:type="llvm:Array" length="2" pointer="*">
                  <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
                </type>
                <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
              </aggregate>
              <indices>
                <type xsi:type="llvm:Predefined" type="i32"/>
                <value xsi:type="llvm:IntegerConstant"/>
              </indices>
              <indices>
                <type xsi:type="llvm:Predefined" type="i32"/>
                <value xsi:type="llvm:IntegerConstant"/>
              </indices>
            </value>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.3/@result"/>
          </address>
          <meta arg="!tbaa" value="!4"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%3"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:NestedGetElementPtr">
              <aggregate>
                <type xsi:type="llvm:Array" length="2" pointer="*">
                  <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
                </type>
                <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
              </aggregate>
              <indices>
                <type xsi:type="llvm:Predefined" type="i32"/>
                <value xsi:type="llvm:IntegerConstant"/>
              </indices>
              <indices>
                <type xsi:type="llvm:Predefined" type="i32"/>
                <value xsi:type="llvm:IntegerConstant" value="1"/>
              </indices>
            </value>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.5/@result"/>
          </address>
          <meta arg="!tbaa" value="!4"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="slt">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.6/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%if.else">
          <condition xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.7/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.6/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx1"/>
          <aggregate>
            <type xsi:type="llvm:Array" length="2" pointer="*">
              <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            </type>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </aggregate>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </indices>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@parameter/@params.0/@value"/>
          </indices>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.1/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.1/@instructions.0/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.1/@instructions.2/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!4"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end"/>
      </blocks>
      <blocks label="if.else">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add2"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.4/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx3"/>
          <aggregate>
            <type xsi:type="llvm:Array" length="2" pointer="*">
              <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            </type>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </aggregate>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </indices>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@parameter/@params.0/@value"/>
          </indices>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.2/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.2/@instructions.0/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.2/@instructions.2/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!4"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.end"/>
      </blocks>
      <blocks label="if.end">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i8"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.0/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="1">
          <value>
            <type xsi:type="llvm:Predefined" type="i8"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.3/@instructions.0/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!3"/>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx11"/>
          <aggregate>
            <type xsi:type="llvm:Array" length="2" pointer="*">
              <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            </type>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </aggregate>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </indices>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@parameter/@params.0/@value"/>
          </indices>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%while.cond.preheader"/>
      </blocks>
      <blocks label="while.cond.preheader">
        <instructions xsi:type="llvm:Phi">
          <result name="%j.023"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
          <cases label="%if.end">
            <value xsi:type="llvm:IntegerConstant"/>
          </cases>
          <cases label="%for.inc.split">
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.8/@instructions.0/@result"/>
          </cases>
        </instructions>
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx6"/>
          <aggregate>
            <type xsi:type="llvm:Array" length="2" pointer="*">
              <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
            </type>
            <value xsi:type="llvm:AddressUse" address="//@elements.2/@address"/>
          </aggregate>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </indices>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.0/@result"/>
          </indices>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i8"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="1">
          <result name="%9"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.2/@result"/>
          </address>
          <meta arg="!tbaa" value="!3"/>
          <meta arg="!range" value="!5"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%10"/>
          <optype xsi:type="llvm:Predefined" type="i8"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.3/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%tobool"/>
          <opType xsi:type="llvm:Predefined" type="i8"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%while.cond7.loopexit.split" elseDestination="%while.cond">
          <condition xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="while.cond">
        <instructions xsi:type="llvm:Branch" destination="%while.cond"/>
      </blocks>
      <blocks label="while.cond7.loopexit.split">
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx8"/>
          <aggregate>
            <type xsi:type="llvm:Array" length="2" pointer="*">
              <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            </type>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </aggregate>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </indices>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.0/@result"/>
          </indices>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%11"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.6/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%12"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.6/@instructions.1/@result"/>
          </address>
          <meta arg="!tbaa" value="!4"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp9"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.6/@instructions.2/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="slt">
          <result name="%cmp17"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.0/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.4/@parameter/@params.0/@value"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%for.inc.split" elseDestination="%land.rhs">
          <condition xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.6/@instructions.3/@result"/>
        </instructions>
      </blocks>
      <blocks label="land.rhs">
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%13"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.3/@instructions.2/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%14"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.7/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!4"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="slt">
          <result name="%cmp12"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.6/@instructions.2/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.7/@instructions.1/@result"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%cmp15"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.6/@instructions.2/@result"/>
          <operand2 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.7/@instructions.1/@result"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="and">
          <result name="%or.cond"/>
          <optype xsi:type="llvm:Predefined" type="i1"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.7/@instructions.3/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.6/@instructions.4/@result"/>
        </instructions>
        <instructions xsi:type="llvm:LogicOperation" operation="or">
          <result name="%or.cond24"/>
          <optype xsi:type="llvm:Predefined" type="i1"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.7/@instructions.2/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.7/@instructions.4/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%land.rhs" elseDestination="%for.inc.split">
          <condition xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.7/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="for.inc.split">
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%inc"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.4/@instructions.0/@result"/>
          <value2 xsi:type="llvm:IntegerConstant" value="1"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="eq">
          <result name="%exitcond"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.8/@instructions.0/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant" value="2"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%for.end" elseDestination="%while.cond.preheader">
          <condition xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.8/@instructions.1/@result"/>
        </instructions>
      </blocks>
      <blocks label="for.end">
        <instructions xsi:type="llvm:GetElementPtr">
          <result name="%arrayidx21"/>
          <aggregate>
            <type xsi:type="llvm:Array" length="2" pointer="*">
              <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            </type>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </aggregate>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </indices>
          <indices>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@parameter/@params.0/@value"/>
          </indices>
        </instructions>
        <instructions xsi:type="llvm:Load" align="4">
          <result name="%15"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="**" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.9/@instructions.0/@result"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Store" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@body/@blocks.9/@instructions.1/@result"/>
          </targetAddress>
          <meta arg="!tbaa" value="!4"/>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:PrimitiveValue" value="void"/>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@main"/>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!0">
    <values meta="!&quot;any pointer&quot;"/>
    <values meta="!1"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!1">
    <values meta="!&quot;omnipotent char&quot;"/>
    <values meta="!2"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!2">
    <values meta="!&quot;Simple C/C++ TBAA&quot;"/>
    <values>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </values>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!3">
    <values meta="!&quot;_Bool&quot;"/>
    <values meta="!1"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!4">
    <values meta="!&quot;int&quot;"/>
    <values meta="!1"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!5">
    <values>
      <arg type="i8"/>
      <value xsi:type="llvm:IntegerConstant"/>
    </values>
    <values>
      <arg type="i8"/>
      <value xsi:type="llvm:IntegerConstant" value="2"/>
    </values>
  </elements>
</llvm:LLVM>
