<?xml version="1.0" encoding="ASCII"?>
<llvm:LLVM xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:llvm="http://www.upb.de/llvm_parser/llvm">
  <elements xsi:type="llvm:TopLevelEntity" target="e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S128"/>
  <elements xsi:type="llvm:TopLevelEntity" target="i386-pc-linux-gnu"/>
  <elements xsi:type="llvm:TypeDefinition">
    <address name="%union.pthread_attr_t"/>
    <struct>
      <types xsi:type="llvm:Predefined" type="i32"/>
      <types xsi:type="llvm:Array" length="32">
        <type xsi:type="llvm:Predefined" type="i8"/>
      </types>
    </struct>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@i"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" type="i32"/>
      <value xsi:type="llvm:IntegerConstant" value="1"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="4">
    <address name="@j"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Predefined" type="i32"/>
      <value xsi:type="llvm:IntegerConstant" value="1"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="1">
    <address name="@.str"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Array" length="2">
        <type xsi:type="llvm:Predefined" type="i8"/>
      </type>
      <value xsi:type="llvm:PrimitiveValue" value="&quot;0\00"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="1">
    <address name="@.str1"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Array" length="17">
        <type xsi:type="llvm:Predefined" type="i8"/>
      </type>
      <value xsi:type="llvm:PrimitiveValue" value="&quot;fib_bench_true.c\00"/>
    </value>
  </elements>
  <elements xsi:type="llvm:GlobalDefinition" align="1">
    <address name="@__PRETTY_FUNCTION__.main"/>
    <value xsi:type="llvm:Parameter">
      <type xsi:type="llvm:Array" length="23">
        <type xsi:type="llvm:Predefined" type="i8"/>
      </type>
      <value xsi:type="llvm:PrimitiveValue" value="&quot;int main(int, char **)\00"/>
    </value>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition" returnAttribute="noalias">
    <returnType xsi:type="llvm:Predefined" pointer="*" type="i8"/>
    <address name="@t1"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
        <value name="%arg"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.1/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.2/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%3"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add.1"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.5/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.4/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.6/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add.2"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.9/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.8/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.10/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add.3"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.13/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.12/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.14/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%9"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add.4"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.17/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.16/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.8/@body/@blocks.0/@instructions.18/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
            <value xsi:type="llvm:PrimitiveValue" value="null"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition" returnAttribute="noalias">
    <returnType xsi:type="llvm:Predefined" pointer="*" type="i8"/>
    <address name="@t2"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
        <value name="%arg"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.1/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.0/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.2/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%2"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%3"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add.1"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.5/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.4/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.6/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%4"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%5"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add.2"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.9/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.8/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.10/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%6"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%7"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add.3"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.13/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.12/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.14/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%8"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%9"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:ArithmeticOperationAdd" operation="add">
          <result name="%add.4"/>
          <optype xsi:type="llvm:Predefined" type="i32"/>
          <value1 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.17/@result"/>
          <value2 xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.16/@result"/>
        </instructions>
        <instructions xsi:type="llvm:Store" volatile="true" align="4">
          <value>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.9/@body/@blocks.0/@instructions.18/@result"/>
          </value>
          <targetAddress>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </targetAddress>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
            <value xsi:type="llvm:PrimitiveValue" value="null"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@main"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" type="i32"/>
        <value name="%argc"/>
      </params>
      <params>
        <type xsi:type="llvm:Predefined" pointer="**" type="i8"/>
        <value name="%argv"/>
      </params>
    </parameter>
    <body>
      <blocks label="entry">
        <instructions xsi:type="llvm:Alloc" align="4">
          <result name="%id1"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
        </instructions>
        <instructions xsi:type="llvm:Alloc" align="4">
          <result name="%id2"/>
          <type xsi:type="llvm:Predefined" type="i32"/>
        </instructions>
        <instructions xsi:type="llvm:Call">
          <result name="%call"/>
          <function>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@address"/>
          </function>
          <pList>
            <params>
              <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
              <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.0/@instructions.0/@result"/>
            </params>
            <params>
              <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
              <value xsi:type="llvm:PrimitiveValue" value="null"/>
            </params>
            <params>
              <type xsi:type="llvm:FunctionType" pointer="*">
                <returnType pointer="*" type="i8"/>
                <parameter>
                  <params>
                    <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
                  </params>
                </parameter>
              </type>
              <value xsi:type="llvm:AddressUse" address="//@elements.8/@address"/>
            </params>
            <params>
              <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
              <value xsi:type="llvm:PrimitiveValue" value="null"/>
            </params>
          </pList>
        </instructions>
        <instructions xsi:type="llvm:Call">
          <result name="%call1"/>
          <function>
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.11/@address"/>
          </function>
          <pList>
            <params>
              <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
              <value xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.0/@instructions.1/@result"/>
            </params>
            <params>
              <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
              <value xsi:type="llvm:PrimitiveValue" value="null"/>
            </params>
            <params>
              <type xsi:type="llvm:FunctionType" pointer="*">
                <returnType pointer="*" type="i8"/>
                <parameter>
                  <params>
                    <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
                  </params>
                </parameter>
              </type>
              <value xsi:type="llvm:AddressUse" address="//@elements.9/@address"/>
            </params>
            <params>
              <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
              <value xsi:type="llvm:PrimitiveValue" value="null"/>
            </params>
          </pList>
        </instructions>
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%0"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.3/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="sgt">
          <result name="%cmp"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.0/@instructions.4/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant" value="144"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%lor.lhs.false">
          <condition xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.0/@instructions.5/@result"/>
        </instructions>
      </blocks>
      <blocks label="lor.lhs.false">
        <instructions xsi:type="llvm:Load" volatile="true" align="4">
          <result name="%1"/>
          <address>
            <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.4/@address"/>
          </address>
          <meta arg="!tbaa" value="!0"/>
        </instructions>
        <instructions xsi:type="llvm:CompareInt" cond="sgt">
          <result name="%cmp2"/>
          <opType xsi:type="llvm:Predefined" type="i32"/>
          <operand1 xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.1/@instructions.0/@result"/>
          <operand2 xsi:type="llvm:IntegerConstant" value="144"/>
        </instructions>
        <instructions xsi:type="llvm:Branch" destination="%if.then" elseDestination="%if.end">
          <condition xsi:type="llvm:AddressUse" address="//@elements.10/@body/@blocks.1/@instructions.1/@result"/>
        </instructions>
      </blocks>
      <blocks label="if.then">
        <instructions xsi:type="llvm:Call">
          <function>
            <type xsi:type="llvm:Predefined" type="void"/>
            <value xsi:type="llvm:AddressUse" address="//@elements.12/@address"/>
          </function>
          <pList>
            <params>
              <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
              <value xsi:type="llvm:NestedGetElementPtr">
                <aggregate>
                  <type xsi:type="llvm:Array" length="2" pointer="*">
                    <type xsi:type="llvm:Predefined" type="i8"/>
                  </type>
                  <value xsi:type="llvm:AddressUse" address="//@elements.5/@address"/>
                </aggregate>
                <indices>
                  <type xsi:type="llvm:Predefined" type="i32"/>
                  <value xsi:type="llvm:IntegerConstant"/>
                </indices>
                <indices>
                  <type xsi:type="llvm:Predefined" type="i32"/>
                  <value xsi:type="llvm:IntegerConstant"/>
                </indices>
              </value>
            </params>
            <params>
              <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
              <value xsi:type="llvm:NestedGetElementPtr">
                <aggregate>
                  <type xsi:type="llvm:Array" length="17" pointer="*">
                    <type xsi:type="llvm:Predefined" type="i8"/>
                  </type>
                  <value xsi:type="llvm:AddressUse" address="//@elements.6/@address"/>
                </aggregate>
                <indices>
                  <type xsi:type="llvm:Predefined" type="i32"/>
                  <value xsi:type="llvm:IntegerConstant"/>
                </indices>
                <indices>
                  <type xsi:type="llvm:Predefined" type="i32"/>
                  <value xsi:type="llvm:IntegerConstant"/>
                </indices>
              </value>
            </params>
            <params>
              <type xsi:type="llvm:Predefined" type="i32"/>
              <value xsi:type="llvm:IntegerConstant" value="47"/>
            </params>
            <params>
              <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
              <value xsi:type="llvm:NestedGetElementPtr">
                <aggregate>
                  <type xsi:type="llvm:Array" length="23" pointer="*">
                    <type xsi:type="llvm:Predefined" type="i8"/>
                  </type>
                  <value xsi:type="llvm:AddressUse" address="//@elements.7/@address"/>
                </aggregate>
                <indices>
                  <type xsi:type="llvm:Predefined" type="i32"/>
                  <value xsi:type="llvm:IntegerConstant"/>
                </indices>
                <indices>
                  <type xsi:type="llvm:Predefined" type="i32"/>
                  <value xsi:type="llvm:IntegerConstant"/>
                </indices>
              </value>
            </params>
          </pList>
        </instructions>
        <instructions xsi:type="llvm:Unreachable"/>
      </blocks>
      <blocks label="if.end">
        <instructions xsi:type="llvm:Return">
          <value xsi:type="llvm:Parameter">
            <type xsi:type="llvm:Predefined" type="i32"/>
            <value xsi:type="llvm:IntegerConstant"/>
          </value>
        </instructions>
      </blocks>
    </body>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="i32"/>
    <address name="@pthread_create"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" pointer="*" type="i32"/>
      </params>
      <params>
        <type xsi:type="llvm:AddressUse" pointer="*" address="//@elements.2/@address"/>
      </params>
      <params>
        <type xsi:type="llvm:FunctionType" pointer="*">
          <returnType pointer="*" type="i8"/>
          <parameter>
            <params>
              <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
            </params>
          </parameter>
        </type>
      </params>
      <params>
        <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
      </params>
    </parameter>
  </elements>
  <elements xsi:type="llvm:FunctionDefinition">
    <returnType xsi:type="llvm:Predefined" type="void"/>
    <address name="@__assert_fail"/>
    <parameter>
      <params>
        <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
      </params>
      <params>
        <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
      </params>
      <params>
        <type xsi:type="llvm:Predefined" type="i32"/>
      </params>
      <params>
        <type xsi:type="llvm:Predefined" pointer="*" type="i8"/>
      </params>
    </parameter>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!0">
    <values meta="!&quot;int&quot;"/>
    <values meta="!1"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!1">
    <values meta="!&quot;omnipotent char&quot;"/>
    <values meta="!2"/>
  </elements>
  <elements xsi:type="llvm:MetadataValue" nodeId="!2">
    <values meta="!&quot;Simple C/C++ TBAA&quot;"/>
    <values>
      <value xsi:type="llvm:PrimitiveValue" value="null"/>
    </values>
  </elements>
</llvm:LLVM>
